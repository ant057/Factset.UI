{"version":3,"sources":["core/line/line.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAAA,qBAMO,eAAe,CAAC,CAAA;IAEvB;;;;OAIG;IAEH;QAAA;QAAqB,CAAC;QADtB;YAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;;kBAAA;QAChB,aAAC;IAAD,CAArB,AAAsB,IAAA;IAAT,cAAM,SAAG,CAAA;IAEtB,oFAAoF;IACpF;QACE,sBAAoB,MAAyB,EAAU,SAAmB,EACtD,QAAoB;YAF1C,iBA2BC;YA1BqB,WAAM,GAAN,MAAM,CAAmB;YAAU,cAAS,GAAT,SAAS,CAAU;YACtD,aAAQ,GAAR,QAAQ,CAAY;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACL,CAAC;QAGO,oCAAa,GAArB,UAAsB,KAAa;YACjC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,QAAM,KAAK,UAAO,EAAE,IAAI,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;QAEO,oCAAa,GAArB;YACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;QAEO,gCAAS,GAAjB,UAAkB,SAAiB,EAAE,IAAa;YAChD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/E,CAAC;QAEH,mBAAC;IAAD,CA3BA,AA2BC,IAAA;IA3BY,oBAAY,eA2BxB,CAAA;IAMD;QAAA;QAA4B,CAAC;QAJ7B;YAAC,eAAQ,CAAC;gBACR,OAAO,EAAE,CAAC,MAAM,CAAC;gBACjB,YAAY,EAAE,CAAC,MAAM,CAAC;aACvB,CAAC;;wBAAA;QAC0B,mBAAC;IAAD,CAA5B,AAA6B,IAAA;IAAhB,oBAAY,eAAI,CAAA","file":"core/line/line.js","sourcesContent":["import {\n    NgModule,\n    Directive,\n    Renderer,\n    ElementRef,\n    QueryList\n} from '@angular/core';\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({ selector: '[md-line]' })\nexport class MdLine {}\n\n/* Helper that takes a query list of lines and sets the correct class on the host */\nexport class MdLineSetter {\n  constructor(private _lines: QueryList<MdLine>, private _renderer: Renderer,\n              private _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n\n\n  private _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`md-${count}-line`, true);\n    }\n  }\n\n  private _resetClasses(): void {\n    this._setClass('md-2-line', false);\n    this._setClass('md-3-line', false);\n  }\n\n  private _setClass(className: string, bool: boolean): void {\n    this._renderer.setElementClass(this._element.nativeElement, className, bool);\n  }\n\n}\n\n@NgModule({\n  exports: [MdLine],\n  declarations: [MdLine],\n})\nexport class MdLineModule { }\n"],"sourceRoot":"/source/"}