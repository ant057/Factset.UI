{"version":3,"sources":["core/overlay/position/overlay-position-builder.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAAA,+BAA4B,kBAAkB,CAAC,CAAA;IAC/C,4CAAwC,+BAA+B,CAAC,CAAA;IACxE,qBAAqC,eAAe,CAAC,CAAA;IACrD,yCAAqC,4BAA4B,CAAC,CAAA;IAKlE,6CAA6C;IAE7C;QACE,gCAAoB,cAA6B;YAA7B,mBAAc,GAAd,cAAc,CAAe;QAAI,CAAC;QAEtD,0CAA0C;QAC1C,uCAAM,GAAN;YACE,MAAM,CAAC,IAAI,iDAAsB,EAAE,CAAC;QACtC,CAAC;QAED,4CAA4C;QAC5C,4CAAW,GAAX,UACI,UAAsB,EACtB,SAAmC,EACnC,UAAqC;YACvC,MAAM,CAAC,IAAI,uDAAyB,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/F,CAAC;QAfH;YAAC,iBAAU,EAAE;;kCAAA;QAgBb,6BAAC;IAAD,CAfA,AAeC,IAAA;IAfY,8BAAsB,yBAelC,CAAA","file":"core/overlay/position/overlay-position-builder.js","sourcesContent":["import {ViewportRuler} from './viewport-ruler';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {ElementRef, Injectable} from '@angular/core';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\n\n\n\n/** Builder for overlay position strategy. */\n@Injectable()\nexport class OverlayPositionBuilder {\n  constructor(private _viewportRuler: ViewportRuler) { }\n\n  /** Creates a global position strategy. */\n  global() {\n    return new GlobalPositionStrategy();\n  }\n\n  /** Creates a relative position strategy. */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition) {\n    return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n  }\n}\n"],"sourceRoot":"/source/"}