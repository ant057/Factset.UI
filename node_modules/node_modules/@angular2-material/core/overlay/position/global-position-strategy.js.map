{"version":3,"sources":["core/overlay/position/global-position-strategy.ts"],"names":[],"mappings":"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","file":"core/overlay/position/global-position-strategy.js","sourcesContent":["import {applyCssTransform} from '@angular2-material/core';\nimport {PositionStrategy} from './position-strategy';\n\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  private _cssPosition: string = 'absolute';\n  private _top: string = '';\n  private _bottom: string = '';\n  private _left: string = '';\n  private _right: string = '';\n\n  /** Array of individual applications of translateX(). Currently only for centering. */\n  private _translateX: string[] = [];\n\n  /** Array of individual applications of translateY(). Currently only for centering. */\n  private _translateY: string[] = [];\n\n  /** Sets the element to usee CSS position: fixed */\n  fixed() {\n    this._cssPosition = 'fixed';\n    return this;\n  }\n\n  /** Sets the element to usee CSS position: absolute. This is the default. */\n  absolute() {\n    this._cssPosition = 'absolute';\n    return this;\n  }\n\n  /** Sets the top position of the overlay. Clears any previously set vertical position. */\n  top(value: string) {\n    this._bottom = '';\n    this._translateY = [];\n    this._top = value;\n    return this;\n  }\n\n  /** Sets the left position of the overlay. Clears any previously set horizontal position. */\n  left(value: string) {\n    this._right = '';\n    this._translateX = [];\n    this._left = value;\n    return this;\n  }\n\n  /** Sets the bottom position of the overlay. Clears any previously set vertical position. */\n  bottom(value: string) {\n    this._top = '';\n    this._translateY = [];\n    this._bottom = value;\n    return this;\n  }\n\n  /** Sets the right position of the overlay. Clears any previously set horizontal position. */\n  right(value: string) {\n    this._left = '';\n    this._translateX = [];\n    this._right = value;\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   */\n  centerHorizontally(offset = '0px') {\n    this._left = '50%';\n    this._right = '';\n    this._translateX = ['-50%', offset];\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   */\n  centerVertically(offset = '0px') {\n    this._top = '50%';\n    this._bottom = '';\n    this._translateY = ['-50%', offset];\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * TODO: internal\n   */\n  apply(element: HTMLElement): Promise<void> {\n    element.style.position = this._cssPosition;\n    element.style.top = this._top;\n    element.style.left = this._left;\n    element.style.bottom = this._bottom;\n    element.style.right = this._right;\n\n    // TODO(jelbourn): we don't want to always overwrite the transform property here,\n    // because it will need to be used for animations.\n    let tranlateX = this._reduceTranslateValues('translateX', this._translateX);\n    let translateY = this._reduceTranslateValues('translateY', this._translateY);\n\n    applyCssTransform(element, `${tranlateX} ${translateY}`);\n\n    return Promise.resolve(null);\n  }\n\n  /** Reduce a list of translate values to a string that can be used in the transform property */\n  private _reduceTranslateValues(translateFn: string, values: string[]) {\n    return values.map(t => `${translateFn}(${t})`).join(' ');\n  }\n}\n"],"sourceRoot":"/source/"}