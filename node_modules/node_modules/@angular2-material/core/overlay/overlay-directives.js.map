{"version":3,"sources":["core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","file":"core/overlay/overlay-directives.js","sourcesContent":["import {\n    NgModule,\n    ModuleWithProviders,\n    Directive,\n    TemplateRef,\n    ViewContainerRef,\n    OnInit,\n    Input,\n    OnDestroy,\n    ElementRef\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {ConnectionPositionPair} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nlet defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[overlay-origin]',\n  exportAs: 'overlayOrigin',\n})\nexport class OverlayOrigin {\n  constructor(private _elementRef: ElementRef) { }\n\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n\n\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[connected-overlay]'\n})\nexport class ConnectedOverlayDirective implements OnInit, OnDestroy {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n\n  @Input() origin: OverlayOrigin;\n  @Input() positions: ConnectionPositionPair[];\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n\n  get overlayRef() {\n    return this._overlayRef;\n  }\n\n  /** TODO: internal */\n  ngOnInit() {\n    this._createOverlay();\n  }\n\n  /** TODO: internal */\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  /** Creates an overlay and attaches this directive's template to it. */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    let overlayConfig = new OverlayState();\n    overlayConfig.positionStrategy =\n        this._overlay.position().connectedTo(\n            this.origin.elementRef,\n            {originX: this.positions[0].overlayX, originY: this.positions[0].originY},\n            {overlayX: this.positions[0].overlayX, overlayY: this.positions[0].overlayY});\n\n    this._overlayRef = this._overlay.create(overlayConfig);\n    this._overlayRef.attach(this._templatePortal);\n  }\n\n  /** Destroys the overlay created by this directive. */\n  private _destroyOverlay() {\n    this._overlayRef.dispose();\n  }\n}\n\n\n@NgModule({\n  imports: [PortalModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\n})\nexport class OverlayModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: OverlayModule,\n      providers: OVERLAY_PROVIDERS,\n    };\n  }\n}\n"],"sourceRoot":"/source/"}