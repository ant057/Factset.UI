{"version":3,"sources":["core/overlay/overlay-ref.ts"],"names":[],"mappings":";;;;;;;;;IAGA;;;OAGG;IACH;QACE,oBACY,WAAuB,EACvB,KAAkB,EAClB,MAAoB;YAFpB,gBAAW,GAAX,WAAW,CAAY;YACvB,UAAK,GAAL,KAAK,CAAa;YAClB,WAAM,GAAN,MAAM,CAAc;QAAI,CAAC;QAErC,2BAAM,GAAN,UAAO,MAAmB;YACxB,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAED,2BAAM,GAAN;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACnC,CAAC;QAED,4BAAO,GAAP;YACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED,gCAAW,GAAX;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QACxC,CAAC;QAED,oDAAoD;QACpD,6BAAQ,GAAR;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAED,0EAA0E;QAC1E,mCAAc,GAAd;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjD,CAAC;QACH,CAAC;QAGH,iBAAC;IAAD,CAtCA,AAsCC,IAAA;IAtCY,kBAAU,aAsCtB,CAAA","file":"core/overlay/overlay-ref.js","sourcesContent":["import {PortalHost, Portal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalHost {\n  constructor(\n      private _portalHost: PortalHost,\n      private _pane: HTMLElement,\n      private _state: OverlayState) { }\n\n  attach(portal: Portal<any>): any {\n    let attachResult = this._portalHost.attach(portal);\n    this.updatePosition();\n\n    return attachResult;\n  }\n\n  detach(): Promise<any> {\n    return this._portalHost.detach();\n  }\n\n  dispose(): void {\n    this._portalHost.dispose();\n  }\n\n  hasAttached(): boolean {\n    return this._portalHost.hasAttached();\n  }\n\n  /** Gets the current state config of the overlay. */\n  getState() {\n    return this._state;\n  }\n\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._state.positionStrategy) {\n      this._state.positionStrategy.apply(this._pane);\n    }\n  }\n\n  // TODO(jelbourn): add additional methods for manipulating the overlay.\n}\n"],"sourceRoot":"/source/"}